version: "3.8"

volumes:
  # certs:
  #   driver: local
  esdata01:
    driver: local
  kibanadata:
    driver: local
  logstashdata01:
   driver: local
  # metricbeatdata01:
  #   driver: local
  # filebeatdata01:
  #   driver: local
  
networks:
  default:
    name: kong-net
    external: true

services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    # volumes:
    #   - certs:/usr/share/elasticsearch/config/certs
    user: "0"
  
  es01:
    # depends_on:
    #   setup:
    #     condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    labels:
      co.elastic.logs/module: elasticsearch
    volumes:
      # - certs:/usr/share/elasticsearch/config/certs
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      # - bootstrap.memory_lock=true
      # - xpack.security.enabled=true
      # - xpack.security.http.ssl.enabled=true
      # - xpack.security.http.ssl.key=certs/es01/es01.key
      # - xpack.security.http.ssl.certificate=certs/es01/es01.crt
      # - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      # - xpack.security.transport.ssl.enabled=true
      # - xpack.security.transport.ssl.key=certs/es01/es01.key
      # - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
      # - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      # - xpack.security.transport.ssl.verification_mode=certificate
      # - xpack.license.self_generated.type=${LICENSE}
    # mem_limit: ${ES_MEM_LIMIT}
    # ulimits:
    #   memlock:
    #     soft: -1
    #     hard: -1
    # healthcheck:
    #   test:
    #     [
    #       "CMD-SHELL",
    #        "curl -s --cacert config/certs/ca/ca.crt https://192.168.0.15:9200 | grep -q 'missing authentication credentials'",
    #    ]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 120

# no terminal
# Para copiar o certificado para dentro do container
# docker cp elk-es01-1:/usr/share/elasticsearch/config/certs/ca/ca.crt /tmp/.
# docker cp elk-es01-1:/usr/share/elasticsearch/config/certs/ca/ca.crt /tmp/
# Once the certificate is downloaded, run a curl command to query the Elasticsearch node:
# curl --cacert /tmp/ca.crt -u elastic:elk-es01-1 https://192.168.0.15:9200


  kibana:
    # depends_on:
    #   es01: 
    #     condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    labels:
      co.elastic.logs/module: kibana
    volumes:
      # - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
     - SERVERNAME=kibana
     - ELASTICSEARCH_HOSTS=https://es01:9200
     - ELASTICSEARCH_USERNAME=admin
     - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    #  - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    #  - XPACK_SECURITY_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    #  - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    #  - XPACK_REPORTING_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    # mem_limit: ${KB_MEM_LIMIT}
    # healthcheck:
    #   test:
    #     [
    #      "CMD-SHELL",
    #      "curl -s -I http://192.168.0.15:5601 | grep -q 'HTTP/1.1 302 Found'",
    #    ]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 120

  logstash01:
    # depends_on:
      # es01:
      #   condition: service_healthy
      # kibana:
      #   condition: service_healthy
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    labels:
      co.elastic.logs/module: logstash
    user: root
    volumes:
      # - certs:/usr/share/logstash/certs
      - logstashdata01:/usr/share/logstash/data
      - "./logstash_ingest_data/:/usr/share/logstash/ingest_data/"
      - "./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro"
    environment:
      - xpack.monitoring.enabled=false
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTIC_HOSTS=https://es01:9200  