openapi: 3.0.0
info:
  title: Ecommerce User Journey API
  description: API endpoints for the ecommerce user journey
  version: 1.0.0
servers:
  - url: https://192.168.0.15:8000/sandbox/ecommerce/v1
    description: Sandbox server
paths:
  /products:
    get:
      summary: Get products based on search
      responses:
        '200':
          description: Successful response with product list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /carts:
    post:
      summary: Create a shopping cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart'
      responses:
        '201':
          description: Successful response with product list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'      
  /cart/{id}/items:
    post:
      summary: Add a product to the cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product added successfully
        '400':
          description: Bad request, invalid input
  /cart/{id}:
    get:
      summary: get a cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart'
      responses:
        '200':
          description: Product added successfully
        '400':
          description: Bad request, invalid input          
  /cart/{id}/deliveryaddress:
    post:
      summary: Remove a product from the cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/address'
      responses:
        '200':
          description: Product removed successfully
        '400':
          description: Bad request, invalid input
  /cart/{id}/paymentmethod:
    post:
      summary: Process the payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentmethod'
      responses:
        '200':
          description: Payment processed successfully
        '400':
          description: Payment failed

  /orders:
    post:
      summary: Check out the shopping cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart'
      responses:
        '200':
          description: Checkout successful
        '400':
          description: Failure 

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number

    cart:
      type: object
      properties:
        client:
          type: object
          properties:
            code:
              type: string  
            name:
              type: string
        products:
          type: array
          items:
            type: object
            properties:
              produto:
                type: string
              sku:
                type: integer
              valor:
                type: number
        origin:
          type: object
          properties:
            code:
              type: integer
            description:
              type: string

    address:
      type: object
      properties:
        cep:
          type: string
        end:
          type: string
        numero:
          type: integer
        bairro:
          type: string
        cidade:
          type: string
        uf:
          type: string

    paymentmethod:
      type: object
      properties:
        cart:
          type: integer
        cliente:
          type: object
          properties:
            codigo:
              type: string
            name:
              type: string
        paymentMethod:
          type: object
          properties:
            cardHolder:
              type: string
            cardNumber:
              type: string
            dueDate:
              type: string
            cvv:
              type: integer

